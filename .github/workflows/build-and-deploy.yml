name: Build and Deploy Chrome Education Materials

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  actions: read

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wkhtmltopdf pandoc
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install markdown weasyprint reportlab
        
    - name: Create output directory
      run: mkdir -p output
      
    - name: Generate slides and materials
      run: |
        echo "🚀 Starting material generation..."
        
        # Python 스크립트 실행
        python scripts/generate_slides.py
        
        # Bash 스크립트 실행
        bash scripts/generate_materials.sh
        
        echo "✅ Material generation completed"
        
    - name: Generate PDF from Markdown (if workbook exists)
      run: |
        if [ -f "docs/chrome_edu_workbook.md" ]; then
          echo "📚 Converting workbook to PDF..."
          pandoc docs/chrome_edu_workbook.md -o output/chrome_edu_workbook.pdf \
            --pdf-engine=wkhtmltopdf \
            -V margin-top=20mm \
            -V margin-bottom=20mm \
            -V margin-left=15mm \
            -V margin-right=15mm
          echo "✅ PDF conversion completed"
        fi
        
    - name: List generated files
      run: |
        echo "📋 Generated files:"
        ls -la output/
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      with:
        enablement: true
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './output'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

