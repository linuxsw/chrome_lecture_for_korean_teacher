name: Create Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wkhtmltopdf pandoc zip
        # 한글 폰트 설치
        sudo apt-get install -y fonts-noto-cjk fonts-noto-cjk-extra
        sudo fc-cache -fv
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install markdown weasyprint reportlab python-pptx
        
    - name: Generate materials
      run: |
        echo "🚀 Generating materials for release..."
        
        # 출력 디렉토리 생성
        mkdir -p output
        
        # 슬라이드 및 자료 생성
        python scripts/generate_slides.py
        bash scripts/generate_materials.sh
        
        # PDF 생성 (워크북이 있는 경우)
        if [ -f "docs/chrome_edu_workbook.md" ]; then
          echo "📚 Converting workbook to PDF..."
          
          # WeasyPrint 사용 (한글 지원 우수)
          if python -c "import weasyprint" 2>/dev/null; then
            echo "Using WeasyPrint for PDF generation..."
            python -c "
import weasyprint
import markdown

# CSS 스타일 정의 (한글 폰트 포함)
css_style = '''
@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@400;700&display=swap');
body {
    font-family: 'Noto Sans KR', 'Noto Sans CJK KR', sans-serif;
    line-height: 1.6;
    margin: 2cm;
    font-size: 12pt;
}
h1, h2, h3, h4, h5, h6 {
    font-weight: 700;
    margin-top: 1.5em;
    margin-bottom: 0.5em;
}
h1 { font-size: 24pt; }
h2 { font-size: 20pt; }
h3 { font-size: 16pt; }
'''

# Markdown을 HTML로 변환
with open('docs/chrome_edu_workbook.md', 'r', encoding='utf-8') as f:
    md_content = f.read()

html_content = f'''
<!DOCTYPE html>
<html lang=\"ko\">
<head>
    <meta charset=\"UTF-8\">
    <style>{css_style}</style>
</head>
<body>
{markdown.markdown(md_content)}
</body>
</html>
'''

# PDF 생성
weasyprint.HTML(string=html_content).write_pdf('output/chrome_edu_workbook.pdf')
print('✅ PDF generated successfully with WeasyPrint')
"
          else
            echo "WeasyPrint not available, using Pandoc..."
            pandoc docs/chrome_edu_workbook.md -o output/chrome_edu_workbook.pdf \
              --pdf-engine=wkhtmltopdf \
              -V margin-top=20mm \
              -V margin-bottom=20mm \
              -V margin-left=15mm \
              -V margin-right=15mm \
              -V mainfont="Noto Sans CJK KR"
          fi
        fi
        
        # PowerPoint 생성
        echo "📊 Creating PowerPoint presentation..."
        python -c "
from pptx import Presentation
from pptx.util import Pt
from pptx.dml.color import RGBColor

# 슬라이드 구성 정보
slides_config = [
    {'title': '수업을 쉽게, 자료를 예쁘게, 협업을 효율적으로', 'subtitle': '디지털 도구 완전정복\n한글학교 선생님을 위한 크롬 웹브라우저 활용 교육'},
    {'title': '강의 개요', 'content': ['교육 목표 및 대상', '기초-중급-고급 단계별 구성', '실습 중심의 학습 방법', '지속적인 학습을 위한 커뮤니티']},
    {'title': '기초 단계: 크롬 브라우저 기본 기능', 'content': ['프로필 관리', '북마크 활용', '단축키 활용', '기본 설정 최적화']},
    {'title': '중급 단계: 교육자를 위한 확장프로그램', 'content': ['Fireshot - 웹페이지 캡처', 'Google Keep - 메모 및 스크랩', 'Video Speed Controller - 동영상 속도 조절', 'Mote - 음성 피드백']},
    {'title': '중급 단계: 한글교육 특화 웹도구', 'content': ['스터디코리안넷', '한국어교수학습샘터', 'NAKS 온라인 자료실', '한글또박또박']},
    {'title': '고급 단계: 구글 워크스페이스 연동', 'content': ['구글 클래스룸', '구글 문서/슬라이드', '구글 드라이브', '구글 미트']},
    {'title': '고급 단계: AI 도구 활용', 'content': ['Brisk Teaching - AI 교사 어시스턴트', 'ChatGPT - 교육 자료 생성', 'Canva AI - 시각적 자료 제작', '음성 인식/합성 도구']},
    {'title': '실습 시나리오', 'content': ['새 학기 준비 (기초)', '효율적인 수업 자료 준비 (중급)', '온라인 수업 진행 (중급)', '학급 관리 시스템 구축 (고급)']},
    {'title': '추가 자료 및 참고 링크', 'content': ['크롬 브라우저 공식 자료', '한글교육 자료', '디지털 교육 도구', '교사 커뮤니티']},
    {'title': '질문 및 연락처', 'content': ['이메일: support@koreanedu.org', '전화: 02-123-4567', '웹사이트: www.koreanedu.org']}
]

# 새 프레젠테이션 생성
prs = Presentation()
chrome_blue = RGBColor(66, 133, 244)

for i, slide_data in enumerate(slides_config):
    slide_layout = prs.slide_layouts[0] if i == 0 else prs.slide_layouts[1]
    slide = prs.slides.add_slide(slide_layout)
    
    title = slide.shapes.title
    title.text = slide_data['title']
    title.text_frame.paragraphs[0].font.size = Pt(32)
    title.text_frame.paragraphs[0].font.color.rgb = chrome_blue
    
    if i == 0 and slide.placeholders[1]:
        subtitle = slide.placeholders[1]
        subtitle.text = slide_data['subtitle']
        subtitle.text_frame.paragraphs[0].font.size = Pt(20)
    elif 'content' in slide_data and slide.placeholders[1]:
        content = slide.placeholders[1]
        content.text = '\n'.join([f'• {item}' for item in slide_data['content']])
        for paragraph in content.text_frame.paragraphs:
            paragraph.font.size = Pt(18)

prs.save('output/chrome_education_slides.pptx')
print('✅ PowerPoint 파일 생성 완료')
"
        
        echo "✅ Material generation completed"
        
    - name: Create release package
      run: |
        echo "📦 Creating release package..."
        
        # 릴리스 패키지 디렉토리 생성
        mkdir -p release-package
        
        # 주요 파일들을 릴리스 패키지에 복사
        cp -r output/* release-package/
        cp -r docs release-package/
        cp README.md release-package/
        cp -r scripts release-package/
        
        # 압축 파일 생성
        cd release-package
        zip -r ../chrome-education-materials-${{ github.ref_name }}.zip .
        cd ..
        
        # 개별 파일들도 준비
        cp output/chrome_edu_workbook.pdf chrome-education-workbook-${{ github.ref_name }}.pdf 2>/dev/null || true
        cp output/index.html chrome-education-slides-${{ github.ref_name }}.html 2>/dev/null || true
        cp output/chrome_education_slides.pptx chrome-education-slides-${{ github.ref_name }}.pptx 2>/dev/null || true
        
        echo "✅ Release package created"
        
    - name: Get release info
      id: release_info
      run: |
        # 태그에서 버전 정보 추출
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # 릴리스 노트 생성
        cat > release_notes.md << EOF
        # 한글학교 선생님을 위한 크롬 웹브라우저 활용 교육 자료 $VERSION
        
        ## 📚 포함된 자료
        
        - **슬라이드 프레젠테이션**: 기초부터 고급까지 단계별 교육 슬라이드
        - **실습 워크북**: 실제 상황 기반 실습 가이드 (PDF)
        - **교육 자료**: 조사 자료 및 커리큘럼 설계 문서
        - **자동화 스크립트**: 교육 자료 생성 및 관리 도구
        
        ## 🚀 사용 방법
        
        1. **전체 패키지 다운로드**: \`chrome-education-materials-$VERSION.zip\`
        2. **개별 파일 다운로드**: 필요한 파일만 선택적으로 다운로드
        3. **온라인 버전**: [GitHub Pages에서 바로 보기](https://linuxsw.github.io/chrome_lecture_for_korean_teacher/)
        
        ## 📖 문서
        
        자세한 사용법은 [README.md](https://github.com/linuxsw/chrome_lecture_for_korean_teacher/blob/main/README.md)를 참조하세요.
        
        ## 🔄 자동 업데이트
        
        이 자료는 GitHub Actions를 통해 자동으로 생성되었습니다. 
        소스 코드가 업데이트되면 자동으로 새로운 버전이 생성됩니다.
        EOF
        
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        name: Chrome Education Materials ${{ steps.release_info.outputs.version }}
        body_path: release_notes.md
        files: |
          chrome-education-materials-${{ github.ref_name }}.zip
          chrome-education-workbook-${{ github.ref_name }}.pdf
          chrome-education-slides-${{ github.ref_name }}.html
          chrome-education-slides-${{ github.ref_name }}.pptx
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

